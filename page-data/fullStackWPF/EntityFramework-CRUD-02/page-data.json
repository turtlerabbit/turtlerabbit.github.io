{"componentChunkName":"component---src-templates-archive-post-js","path":"/fullStackWPF/EntityFramework-CRUD-02/","result":{"data":{"mdx":{"id":"b489e12c-bb6d-5b1b-b4ac-e942fbeb6156","excerpt":"SimpleTraderDbContext를 약간 리팩터링하고 SimpleTraderDbContext를 인스턴스화하기위한 팩토리 클래스를 만든다. \n그런 다음 파트 FULL STACK WFP 01의 Entity Framework 설정을 사용하여 애플리케이션에 대한 Data Service…","frontmatter":{"title":"FULL STACK WFP 02 - Entity Framework CRUD","date":"May 12, 2021","tag":"WPF, FullStack, ReFactory, DbContext"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FULL STACK WFP 02 - Entity Framework CRUD\",\n  \"date\": \"2021-05-12 02\",\n  \"tag\": \"WPF, FullStack, ReFactory, DbContext\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null), mdx(\"p\", null, \"SimpleTraderDbContext\\uB97C \\uC57D\\uAC04 \\uB9AC\\uD329\\uD130\\uB9C1\\uD558\\uACE0 SimpleTraderDbContext\\uB97C \\uC778\\uC2A4\\uD134\\uC2A4\\uD654\\uD558\\uAE30\\uC704\\uD55C \\uD329\\uD1A0\\uB9AC \\uD074\\uB798\\uC2A4\\uB97C \\uB9CC\\uB4E0\\uB2E4.\\n\\uADF8\\uB7F0 \\uB2E4\\uC74C \\uD30C\\uD2B8 FULL STACK WFP 01\\uC758 Entity Framework \\uC124\\uC815\\uC744 \\uC0AC\\uC6A9\\uD558\\uC5EC \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC5D0 \\uB300\\uD55C Data Service classes \\uBE4C\\uB4DC\\uB97C \\uC2DC\\uC791\\uD55C\\uB2E4.\"), mdx(\"h1\", null), mdx(\"h3\", null, \"1. refactor the SimpleTraderDbContext a tad\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Class Library : SimpleTrader.EntityFramework\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SimpleTraderDbContext.cs : \\uB9AC\\uD329\\uD1A0\\uB9C1 \\uC791\\uC5C5 \\uC2DC\\uC791\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class SimpleTraderDbContext : DbContext\\n{\\n    public DbSet<User> Users { get; set; }\\n    public DbSet<Account> Accounts { get; set; }\\n    public DbSet<AssetTransaction> AssetTransactions { get; set; }\\n\\n    // 2. Error \\uD574\\uACB0\\uD558\\uAE30\\uD574 \\uCF54\\uB4DC \\uCD94\\uAC00\\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\\n    {\\n        modelBuilder.Entity<AssetTransaction>().OwnsOne(a => a.Stock);\\n        base.OnModelCreating(modelBuilder);\\n    }\\n\\n    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\\n    {\\n        // 1. optionsBuilder.UseSqlServer\\uC744 \\uC0AC\\uC6A9\\uD558\\uAE30 \\uC704\\uD574\\n        // NuGet - Microsoft.EntityFrameworkCore.SqlServer \\uC124\\uCE58.\\n        optionsBuilder.UseSqlServer(\\\"Server=(localdb)\\\\\\\\MSSQLLocalDB;Database=nameDB~~;\\\");\\n\\n        base.OnConfiguring(optionsBuilder);\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Class Library : SimpleTrader.EntityFramework\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SimpleTraderDbContext.cs : \\uB9AC\\uD329\\uD1A0\\uB9C1 \\uC791\\uC5C5 \\uC644\\uB8CC\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class SimpleTraderDbContext : DbContext\\n{\\n    public DbSet<User> Users { get; set; }\\n    public DbSet<Account> Accounts { get; set; }\\n    public DbSet<AssetTransaction> AssetTransactions { get; set; }\\n    public SimpleTraderDbContext(DbContextOptions options) : base(options) { }\\n\\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\\n    {\\n        modelBuilder.Entity<AssetTransaction>().OwnsOne(a => a.Stock);\\n        base.OnModelCreating(modelBuilder);\\n    }        \\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Class Library : SimpleTrader.EntityFramework\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SimpleTraderDbContextFactory.cs : SimpleTraderDbContext\\uB97C \\uC778\\uC2A4\\uD134\\uC2A4\\uD654\\uD558\\uAE30\\uC704\\uD55C \\uD329\\uD1A0\\uB9AC \\uD074\\uB798\\uC2A4\\uB97C \\uB9CC\\uB4E0\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// IDesignTimeDbContextFactory\\uB294\\n// \\uD30C\\uC0DD \\uB41C Microsoft.EntityFrameworkCore.DbContext \\uC778\\uC2A4\\uD134\\uC2A4\\uB97C \\uB9CC\\uB4E4\\uAE30\\uC704\\uD55C \\uD329\\uD1A0\\uB9AC\\uB2E4.\\n\\npublic class SimpleTraderDbContextFactory : \\n                IDesignTimeDbContextFactory<SimpleTraderDbContext>\\n{\\n    public SimpleTraderDbContext CreateDbContext(string[] args = null)\\n    {\\n        var options = new DbContextOptionsBuilder<SimpleTraderDbContext>();\\n        options.UseSqlServer(\\\"Server=(localdb)\\\\\\\\MSSQLLocalDB;Database=nameDB~~;\\\");\\n\\n        return new SimpleTraderDbContext(options.Options);\\n    }\\n}\\n\\n// \\uACB0\\uAD6D\\n// SimpleTraderDbContext.OnConfiguring(optionsBuilder);\\n// \\uB9AC\\uD329\\uD1A0\\uB9C1 \\uC791\\uC5C5\\uC73C\\uB85C \\n// SimpleTraderDbContextFactory.CreateDbContext();\\n\")), mdx(\"h1\", null), mdx(\"h3\", null, \"2. building out data service classes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Class Library : SimpleTrader.EntityFramework\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Services / GenericDataServices.cs\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class GenericDataServices<T> : IDataService<T> where T : DomainObject\\n{\\n    private readonly SimpleTraderDbContextFactory _contextFactory;\\n\\n    public GenericDataServices(SimpleTraderDbContextFactory contextFactory)\\n    {\\n        _contextFactory = contextFactory;\\n    }\\n\\n    public async Task<T> Create(T entity)\\n    {\\n        using(SimpleTraderDbContext context = _contextFactory.CreateDbContext())\\n        {\\n            EntityEntry<T> createdResult = await context.Set<T>().AddAsync(entity);\\n            await context.SaveChangesAsync();\\n\\n            return createdResult.Entity;\\n        }\\n    }\\n\\n    public async Task<bool> Delete(int id)\\n    {\\n        using (SimpleTraderDbContext context = _contextFactory.CreateDbContext())\\n        {\\n            T entity = await context.Set<T>().FirstOrDefaultAsync((e) => e.Id == id);\\n                // T type\\uC744 Id\\uAC00 \\uACF5\\uD1B5\\uC73C\\uB85C \\uB4E4\\uC5B4\\uAC04 \\uD0C0\\uC785\\uC73C\\uB85C \\uAC15\\uC81C\\uD654 \\uD558\\uAE30 => DomainObject.cs\\n            context.Set<T>().Remove(entity);\\n            await context.SaveChangesAsync();\\n\\n            return true;\\n        }\\n    }\\n\\n    public async Task<T> Get(int id)\\n    {\\n        using (SimpleTraderDbContext context = _contextFactory.CreateDbContext())\\n        {\\n            T entity = await context.Set<T>().FirstOrDefaultAsync((e) => e.Id == id);\\n\\n            return entity;\\n        }\\n    }\\n\\n    public async Task<IEnumerable<T>> GetAll()\\n    {\\n        using (SimpleTraderDbContext context = _contextFactory.CreateDbContext())\\n        {\\n            IEnumerable<T> entities = await context.Set<T>().ToListAsync();\\n\\n            return entities;\\n        }\\n    }\\n\\n    public async Task<T> Update(int id, T entity)\\n    {\\n        using (SimpleTraderDbContext context = _contextFactory.CreateDbContext())\\n        {\\n            entity.Id = id;\\n\\n            context.Set<T>().Update(entity);\\n            await context.SaveChangesAsync();\\n\\n            return entity;\\n        }\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Class Library : SimpleTrader.Domain\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Models / DomainObject.cs\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// public class GenericDataServices<T> : IDataService<T> where T : DomainObject\\n\\npublic class DomainObject\\n{\\n    public int Id { get; set; }\\n}\\n\\n#\\n\\npublic class Account : DomainObject\\n{\\n    public User AccountHolder { get; set; }\\n    public double Balance { get; set; }\\n    public IEnumerable<AssetTransaction> AssetTransactions { get; set; }\\n\\n}\\n\\n#\\n\\npublic class AssetTransaction : DomainObject\\n{\\n    public Account Account { get; set; }\\n    public bool IsPurchase { get; set; }\\n    public Stock Stock { get; set; }\\n    public int Shares { get; set; }\\n    public DateTime DateProcessed { get; set; }\\n}\\n\\n#\\n\\npublic class User : DomainObject\\n{\\n    public string Email { get; set; }\\n    public string Username { get; set; }\\n    public string Password { get; set; }\\n    public DateTime DatedJoined { get; set; }\\n}\\n\")), mdx(\"h1\", null), mdx(\"h3\", null, \"3. Testing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Class Library : ConsoleApp1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Services / Program.cs\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"IDataService<User> userServices = \\n        new GenericDataServices<User>(new SimpleTraderDbContextFactory());\\n\\nuserServices.Create(new User { Username = \\\"Test\\\" }).Wait();\\n\\nConsole.WriteLine(userServices.GetAll().Result.Count());\\n\\nConsole.WriteLine(userServices.Get(1).Result);\\n\\nConsole.WriteLine(userServices.Update(1, new User() { Username = \\\"TestUser\\\" }).Result);\\n\\nConsole.WriteLine(userServices.Delete(1).Result);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/fullStackWPF/EntityFramework-CRUD-02/","previous":{"id":"0c3afcfc-956f-5c53-ad8a-d4fd9fbcc160","fields":{"slug":"/fullStackWPF/Domain-Introduction-and-EntityFramework-Setup-01/"},"frontmatter":{"title":"FULL STACK WFP 01 - Domain Introduction and Entity Framework Setup"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FULL STACK WFP 01 - Domain Introduction and Entity Framework Setup\",\n  \"date\": \"2021-05-12 01\",\n  \"tag\": \"WPF, FullStack, EntityFramework, Migrations\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null), mdx(\"p\", null, \"\\uD504\\uB85C\\uC81D\\uD2B8\\uC640 \\uB3C4\\uBA54\\uC778\\uC744 \\uC18C\\uAC1C\\uD558\\uACE0 \\uB3C4\\uBA54\\uC778 \\uACC4\\uCE35 \\uAD6C\\uCD95\\uC744 \\uC2DC\\uC791\\uD558\\uACE0 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC744 \\uC704\\uD55C Entity Framework\\uB97C \\uC124\\uC815\\uD55C\\uB2E4.\"), mdx(\"h1\", null), mdx(\"h3\", null, \"1. Domain Introduction\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Class Library \\uC0DD\\uC131 - SimpleTrader.Domain\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Models / User.cs, Account.cs, AssetTransaction.cs, Stock.cs\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class User\\n{\\n    public int Id { get; set; }\\n    public string Email { get; set; }\\n    public string Username { get; set; }\\n    public string Password { get; set; }\\n    public DateTime DatedJoined { get; set; }\\n}\\n\\npublic class Account\\n{\\n    public int Id { get; set; }\\n    public User AccountHolder { get; set; }\\n    public double Balance { get; set; }\\n    public IEnumerable<AssetTransaction> AssetTransactions { get; set; }\\n\\n}\\n\\npublic class AssetTransaction\\n{\\n    public int Id { get; set; }\\n    public Account Account { get; set; }\\n    public bool IsPurchase { get; set; }\\n    public Stock Stock { get; set; }\\n    public int Shares { get; set; }\\n    public DateTime DateProcessed { get; set; }\\n}\\n\\npublic class Stock\\n{\\n    public string Symbol { get; set; }\\n    public double pricePerShare { get; set; }\\n}\\n\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://lh3.googleusercontent.com/5TMzsWVcP52h6HyJ_hXt6hBTKP6NEWEFCw68UGMXR57Ta_ChoYaSKgJvdHxhEq9QCZMopWVvt1j71sMywz2Dp3LeqHJELscOsp7hTabj0nyjkuqA8IMa0J-nR1TEp6Mk42HZ9Y1HWf_T4T7M64FSgWANA5I6ljZL-RMBfNmnSDkbXblpKT7z1si_zp3NzLlofx0CqMFgbkC1bc29qq_AfZlYHd1jl8nhTExW6iNRxlXRAdxR9BzFGzrbCvMcwW3hdphL7n4z4u-7do8SSKVngLKIDkVt_xuNnbfWI1yuAWzm8nyi2aFxNfdu6nmNazQ9_mUgqYdXX6PeWDM1ZKioq6dIDLQGjrFsdW01C1xna58E9y9urgBbT2XH4pYcCInMMd2v3RTP4d8pfHcmeqDISuk-XoGJdHfzDufMKAjZBnXNvTuJS0l9uOLt-G9j9nD2K0LmJ6ueNCzmy2gptc7rnDyX1UUypu92YW1k51INewVVEkPngZOEjSZyK-rm9dWWhwhu9kwj9krN6FlKzmLR4M52z_G-1lr3zq7lKTf31zUR65_4Waml21NyjA_Ttquss9KFTlwA_nd_dTvl9vgL3aOahqYBjBCLsOZj5QNGicq4PI4ggUjtlWf_olerFgIthU9BXaRdtNNh4stwL362kx88w-p2ouzIoAM3gaHwPk4gwQctG-hI0chHxjcPbrb81_5ZoRDTD9uwzODZT_drQA=w2002-h1138-no?authuser=0\",\n    \"alt\": \"alt\"\n  })), \"\\n\", mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://lh3.googleusercontent.com/_f8yVFhqOZIcOPYFpX7iMFky2VtZnHbvZG-dcUN4HDvp-qRBVjcQkRbZXqV0fBMf2rN4eiCMDxAvDN6DraDQLKwE7byZ2mu5RkrOINqtrLIgfAtIHCuGI7rmCpbGhHWx650CBWJ0QHUWH9bTUV5HsxAXZRC5MOpIzT33-DjrfrsPDZ7ha-GZWOF1Re3bOSoD2o5gJczNeQkwPRNcgbbF3kpSlMdK5-AQp0AUDLdaf7wZoPP5G_RoB0pjkQIVMdcWQQ7oU7dazpDzNChgSLRQ2u-3APQss_aYQZ81y2-fN7RiHoShcyNLeYBAWXmT5nhM2aOgzPXYyL9gREJAXCMZxPc45C3FxxPMUzNieokVA3GAL3VT64Yy-QA9VVOJw4OkhBpFVenbABAoMYci-d_8lcxaORTgu9BodzxyJXG2F9o_gJMj5XVhzS-IjC5M3wP4mAqV4hmlLYr3rIpkvE4HwL-VqEYwqmA4UaJA4pwPCoLzsn0zjDwIJZ5a3niUJ8HuQoc15CM61yPlVQwIfGbupFWkFvSjDlos304j1c57dTesxOx1TBw4sGqoX9Lx82UY4CRItOgxpAsP_6E4W77k2_Ex9sRJxvh-pyYb14TT99m_lb77mxDFB4RrrQrKMbdiB-_ba5atkcKG0Vz9PkitaALqnp6A_8h690k0uKVenDlSbD11-ha3C425RM-J_E099Jho9Mgpuo_1u2UkGczU2A=w1654-h1207-no?authuser=0\",\n    \"alt\": \"alt\"\n  }))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Services / IDataService.cs\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public interface IDataService<T>\\n{\\n    Task<IEnumerable<T>> GetAll();\\n    Task<T> Get(int id);\\n    Task<T> Create(T entity);\\n    Task<T> Update(int id, T entity);\\n\\n    Task<bool> Delete(int id);\\n}\\n\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://lh3.googleusercontent.com/4sWgWz3CZyXgI_SCpQrN0ewp53IF_W1-8ChqCmbYi_Y2YsBdR6oR9M9iq_4xDOcNwnnQFB7dzzdvYgNKsvkncgxf9yruWZedS87cqihxhp7gJxYPeNmT2PRwhep0vhbn3s1MTmcjvEwEt0iSJu_iHLkDD3G4Qc8cFTfWhWgE-j9ZfXhgkFNN337AHyqE9RFlNsiPCxMB65cL5XXfwyiNj3uPjAqkBMwJWUXDnu5MLrqeZ_jRwdVXJgXaBQSSp5RvLZZW-VoQOYKPDNPmBTPp2rNmarrh8M3o_z9d_7jV1if3lhP-DPSfTlMqWjiDhGhBXBrYo_cpPatXqNTitjgD7lEaQoeKLnXly-sj9_UEAVcufmVUuGjpQrLonGbxhZ1VAISTnXMoLqMQv_6oBF_CyN45gZF8jXQmQQLKFGTwmisVEVKrFLarXXPgJ3wcL-9UDgQSkUFjelvNkSiCd56-nzgoBSET04rlwf5BCii9hpFgv2SViWalVvQXl523zF9KpjZXVZKqT9-TprBkyINWpRnp89GiVNi_yxx7PxY9h1Wny_NuUxm7BAD8rJxr7T0CGyLHGvAtpiiyCvjPR8TStBGVpoVND-x3Z95GdKhP0_MK030G4-A8GR-XM4aJQRU_18tEvwCSblGM2hU2Bz1QCN-gGw7Q3Ry7waZkz9cnvkhhbMwlXma4M2rr6Ldk9qNTu-uuzvO5oJtiKwYB0PCoMw=w1725-h1285-no?authuser=0\",\n    \"alt\": \"alt\"\n  }))), mdx(\"h1\", null), mdx(\"h3\", null, \"2. Entity Framework Setup\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Class Library \\uC0DD\\uC131 - SimpleTrader.EntityFramework\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NuGet - Microsoft.EntityFrameworkCore \\uC124\\uCE58\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SimpleTraderDbContext.cs\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class SimpleTraderDbContext : DbContext\\n{\\n    public DbSet<User> Users { get; set; }\\n    public DbSet<Account> Accounts { get; set; }\\n    public DbSet<AssetTransaction> AssetTransactions { get; set; }\\n\\n    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\\n    {\\n        // 1. optionsBuilder.UseSqlServer\\uC744 \\uC0AC\\uC6A9\\uD558\\uAE30 \\uC704\\uD574\\n        // NuGet - Microsoft.EntityFrameworkCore.SqlServer \\uC124\\uCE58.\\n        optionsBuilder.UseSqlServer(\\\"Server=(localdb)\\\\\\\\MSSQLLocalDB;Database=nameDB~~;\\\");\\n\\n        base.OnConfiguring(optionsBuilder);\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NuGet - Microsoft.EntityFrameworkCore.Tools : Package Manager Console \\uC0AC\\uC6A9\\uD558\\uAE30 \\uC704\\uD574\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SimpleTrader.EntityFramework \\uC2DC\\uC791 \\uD504\\uB85C\\uC81D\\uD2B8\\uB85C \\uC124\\uC815.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PM> add-migration initial \\uC2E4\\uD589.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Error - The entity type \\u2018Stock\\u2019 requires a primary key to be defined. \\uBC1C\\uC0DD\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class SimpleTraderDbContext : DbContext\\n{\\n    public DbSet<User> Users { get; set; }\\n    public DbSet<Account> Accounts { get; set; }\\n    public DbSet<AssetTransaction> AssetTransactions { get; set; }\\n\\n    // 2. Error \\uD574\\uACB0\\uD558\\uAE30\\uD574 \\uCF54\\uB4DC \\uCD94\\uAC00\\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\\n    {\\n        modelBuilder.Entity<AssetTransaction>().OwnsOne(a => a.Stock);\\n        base.OnModelCreating(modelBuilder);\\n    }\\n\\n    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\\n    {\\n        // 1. optionsBuilder.UseSqlServer\\uC744 \\uC0AC\\uC6A9\\uD558\\uAE30 \\uC704\\uD574\\n        // NuGet - Microsoft.EntityFrameworkCore.SqlServer \\uC124\\uCE58.\\n        optionsBuilder.UseSqlServer(\\\"Server=(localdb)\\\\\\\\MSSQLLocalDB;Database=nameDB~~;\\\");\\n\\n        base.OnConfiguring(optionsBuilder);\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PM> add-migration initial\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PM> update-database\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"Entity Framework Core Migrations\\n\\n// Creating a Migration\\n[Command Line]\\ndotnet ef migrations add <name of migration>\\n[Package Manager console]\\nadd-migration <name of migration>\\n\\n// Add a Migration\\n[Command Line]\\ndotnet ef migrations add <name of migration>\\n[Package Manager Console]\\nAdd-Migration <name of migration>\\n\\n// Removing a Migration\\n[Command Line]\\ndotnet ef migrations remove\\n[Package Manager Console]\\nremove-migration\\n\\n// Applying a Migration : Update\\n[Command line]\\ndotnet ef database update\\n[Package Manager Console]\\nupdate-database\\n\\n// Reversing a Migration\\n// \\uCCAB \\uBC88\\uC9F8 \\uB9C8\\uC774\\uADF8\\uB808\\uC774\\uC158\\uC758 \\uC774\\uB984\\uC774 \\\"Create\\\"\\uC774\\uACE0 \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uB97C \\uBCF5\\uC6D0\\uD558\\uC5EC \\n// \\uD6C4\\uC18D \\uB9C8\\uC774\\uADF8\\uB808\\uC774\\uC158\\uC73C\\uB85C \\uC778\\uD55C \\uBAA8\\uB4E0 \\uBCC0\\uACBD \\uC0AC\\uD56D\\uC744 \\uC81C\\uAC70\\uD558\\uB824\\uBA74 \\n// \\\"Create\\\"\\uB97C update \\uBA85\\uB839\\uC5D0 \\uC804\\uB2EC\\uD55C\\uB2E4.\\n[Command line]\\ndotnet ef database update Create\\n[Package Manager Console]\\nupdate-database Create\\n\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://lh3.googleusercontent.com/kbHhpCd4k4UrRGcMyhNcujqv_OigiZJaBlbJ1M5g9kxBHIeoj5NQpCAPFujItSC6uuG7-pWekoTa8phEjm6MookZt1o974ulTBSJ7ShFka8RgO7imdAYobUByCA0gwA34_idq0aVJVKm4xl8y0SFXbNJBYsg00JkpMsB1mzopMY6t1Vx3y2tHlq0CV8symmH41J1HxWjFksqiuJMTmpfYGwAABTruO0Pee3DhloXLgnSyV_AUnRC0p22Yitt1l_pHI9snODKT0M1pQYZc5Fv5JZoQYQqlNbNa0O-MzF_oAKQo9hNMHOSTFg8_ZMxzWsMo45iZYp400ZExGpK7WuKkjPBqCNW60rewIhum25YJAo87bUrk8mIBGj6JcQhcVw7Z9JBW_F6Ti9ufoOUO40zXcX1eBax77-3z_Q_F4A2RyCmxzBTf_RLSmcLZJW4kYCOPQuJp0zXLsabaxg0WXdgEThnczbbHhaskaq5YmOMA-U-f3bTnNvhgW7ylU99HMfqjqyC-OP3xM3r8rOIGB_jHUlzNKmS2G9PHrZZd2InlvC997kjlo3JZjRUs1ag342hsC0jGvGNvCjRaEPIFQtGGplSk8mlRTmTuQmfkRC4yrNsW7s4gN_GYUbOltx_KDsORzyK1phb2ECkU4GA06D68rjHiEQGZaMMYfrqKGXVJCH3ZIt9QHHWHnTpFJG2K_n1v5eBslbNhTCMTr9ID269iA=w1453-h508-no?authuser=0\",\n    \"alt\": \"alt\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;"},"next":{"id":"0ae16d5d-9dae-54a3-bdf7-3ed3cc6da2e4","fields":{"slug":"/fullStackWPF/WPF-in-dotNET-and-MVVM-Navigation-03/"},"frontmatter":{"title":"FULL STACK WFP 03 - WPF in .NET and MVVM Navigation"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FULL STACK WFP 03 - WPF in .NET and MVVM Navigation\",\n  \"date\": \"2021-05-12 03\",\n  \"tag\": \"WPF, FullStack, Navigation, MVVM\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null), mdx(\"p\", null, \"Simple Trader front-end\\uB97C \\uC704\\uD55C WPF project\\uB97C \\uC124\\uC815\\uD55C\\uB2E4.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"MVVM \\uBC29\\uC2DD\\uC73C\\uB85C \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uC124\\uC815\\uD558\\uACE0 \\uB9E4\\uC6B0 \\uAC04\\uB2E8\\uD55C navigation control\\uB97C \\uB9CC\\uB4E4\\uACE0 \\uBDF0 \\uBAA8\\uB378 \\uAC04 \\uD0D0\\uC0C9\\uC744 \\uC124\\uC815\\uD55C\\uB2E4. \"), mdx(\"h1\", null), mdx(\"h3\", null, \"1. WPF project \\uC124\\uC815 \\uBC0F MVVM \\uBC29\\uC2DD\\uC73C\\uB85C \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uC124\\uC815\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Add a new project : WPF Application - SimpleTrader.WPF\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAE30\\uBCF8 \\uC124\\uC815\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Add Reference - SimpleTrader.Domain, SimpleTrader.EntityFrameworks\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD3F4\\uB354 \\uC0DD\\uC131 - ViewModels, Views\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"App.xaml - StartupUrl=\\u201CMainWindow.xaml\\u201D line \\uC0AD\\uC81C\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"App.xaml.cs - \\uCD94\\uAC00\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"protected override void OnStartup(StartupEventArgs e)\\n{\\n    Window window = new MainWindow();        \\n    window.Show();\\n\\n    base.OnStartup(e);\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"F5 \\uC2E4\\uD589 \\uC644\\uB8CC\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"ViewModels / MainViewModel.cs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"ViewModels / ViewModelBase.cs\"))), mdx(\"h1\", null), mdx(\"h3\", null, \"2. Control\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Simple Wire Frame\\n\", mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://lh3.googleusercontent.com/O-uRlqWtzwgvgR6KTQTvWB12dLcnprtXOZ9RpewO6Pc2PGmlIFvAXMHVyW-1tw1BpD0J9uuiYVOk4GOJ4o22MHC2l2XDvTWP3qBXfZ05d39oMr7XxHKwd4pydCDEzTj85Vc-JuaafEs28Fai8ismVpCURBLNTcyIxpNwdOrOH5CvzWlhRMFpHuvWd_ABD_SIaE5CoDmetrqkUE1idi7Qz2HWituNVxt9XzAUmyT8_e-PtJWjvsyA9VEgddOqNETKWQA4Yc0le3tsT793Mk9GfVgT1WAKVIaEe0VwO88vciTdFkye82k5865Afn6omRp-xEGwTyncXjxR8ZYFV3ceNCBUgpcEfRFp9U8tOfLCPtKzgUPoZ4tGrcFugyBtT5pIAM1GnOMAXAh0UPCGKLVb5qd_QyY9fDE2jbsyn9mc_0kK_gR1nrk5BaqQqaBob8sulxb7c8DzYue1y3LhTLZZbbfkdVLchqB0yIxItpqaHbRrSr5pfWj22glADxwweUy9LpXGlSZfBH7QH76IO_a1fR38VWz8mVTvKR-5of71aftwbUw8npzlq5OSUNCNcDePSKE851iujkJDE2noO8blB1qXsEM-YMsyFp6gDmQ9oqml4J3uKcxvNZoVVtZep8PrXpVG28vUlEcFaSXQC4XRpAGabKEB8Hhus3UeIFEmRvPBfYpXyTCEhWTX2pP9lmjwNXJn4Xd7S1wr3JcT-CQ-ZA=w1342-h603-no?authuser=0\",\n    \"alt\": \"alt\"\n  })))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD3F4\\uB354 \\uC0DD\\uC131 - SimpleTrader.WPF / Controls\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Controls - NavigationBar.xaml (user control)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Navigation Bar \\uAE30\\uB2A5\\uC744 \\uD558\\uB294 user control\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"<Grid>\\n    <Grid.RowDefinitions>\\n        <RowDefinition Height=\\\"auto\\\" />\\n        <RowDefinition Height=\\\"auto\\\" />\\n    </Grid.RowDefinitions>\\n\\n    <TextBlock Grid.Row=\\\"0\\\" \\n                Text=\\\"Simple Trader\\\"/>\\n    <Grid Grid.Row=\\\"1\\\" >\\n        <Grid.ColumnDefinitions>\\n            <ColumnDefinition Width=\\\"auto\\\" />\\n            <ColumnDefinition Width=\\\"auto\\\" />\\n            <ColumnDefinition Width=\\\"auto\\\" />\\n            <ColumnDefinition Width=\\\"auto\\\" />\\n            <ColumnDefinition Width=\\\"*\\\" />\\n        </Grid.ColumnDefinitions>\\n\\n        <RadioButton Grid.Column=\\\"0\\\" />\\n        <RadioButton Grid.Column=\\\"1\\\" />\\n        <RadioButton Grid.Column=\\\"2\\\" Content=\\\"Buy\\\" />\\n        <RadioButton Grid.Column=\\\"3\\\" Content=\\\"Sell\\\" />\\n    </Grid>\\n</Grid>\\n\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"MainWindow.xaml\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// MainWindow\\uC5D0 NavigationBar \\uC5F0\\uACB0\\n\\nxmlns:controls=\\\"clr-namespace:SimpleTrader.WPF.Controls\\\"\\n\\n<Grid>\\n    <controls:NavigationBar/>\\n</Grid>\\n\")))), mdx(\"h1\", null), mdx(\"h3\", null, \"3. Style\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD3F4\\uB354 \\uC0DD\\uC131 - SimpleTrader.WPF / Styles \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Styles / Common.xaml (Resource Dictionary)\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"<!--Colors-->\\n<Color x:Key=\\\"ColorPrimary1\\\">#799540</Color>\\n<Color x:Key=\\\"ColorPrimary2\\\">#50632b</Color>\\n\\n<!--Brushes-->\\n<SolidColorBrush x:Key=\\\"BrushPrimary1\\\" Color=\\\"{StaticResource ColorPrimary1}\\\" />\\n<SolidColorBrush x:Key=\\\"BrushPrimary2\\\" Color=\\\"{StaticResource ColorPrimary2}\\\" />\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"App.xaml\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Application\\uC5D0 \\uC2A4\\uD0C0\\uC77C \\uB4F1\\uB85D\\n\\n<Application.Resources>\\n    \\n    <ResourceDictionary>\\n        <ResourceDictionary.MergedDictionaries>\\n            <ResourceDictionary Source=\\\"/Styles/Common.xaml\\\" />\\n        </ResourceDictionary.MergedDictionaries>\\n    \\n    </ResourceDictionary>\\n\\n</Application.Resources>\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Controls / NavigationBar.xaml\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// \\uB4F1\\uB85D\\uD55C \\uC2A4\\uD0C0\\uC77C \\uC801\\uC6A9\\n<Grid>\\n    <Grid.RowDefinitions>\\n        <RowDefinition Height=\\\"auto\\\" />\\n        <RowDefinition Height=\\\"auto\\\" />\\n    </Grid.RowDefinitions>\\n\\n    <TextBlock Grid.Row=\\\"0\\\" \\n               Text=\\\"Simple Trader\\\"\\n               Background=\\\"{StaticResource BrushPrimary1}\\\"/>\\n    <Grid Grid.Row=\\\"1\\\" Background=\\\"{StaticResource BrushPrimary2}\\\">\\n\\n    ....\\n\\n    </Grid>\\n</Grid>\\n\")))), mdx(\"h1\", null), mdx(\"h3\", null, \"4. Setup navigation between view models\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"ViewModels / HomeViewModel.cs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"ViewModels / PortfolioViewModel.cs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD3F4\\uB354 \\uC0DD\\uC131 - SimpleTrader.WPF / State \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD3F4\\uB354 \\uC0DD\\uC131 - SimpleTrader.WPF / State / Navigators\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"/ State / Navigators / INavigator.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public interface INavigator\\n{\\n    ViewModelBase CurrentViewModel { get; set; }\\n    ICommand UpdateCurrentViewModelCommand { get; }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"/ State / Navigators / Navigator.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class Navigator : INavigator\\n{\\n    public ViewModelBase CurrentViewModel{ get; set; }\\n\\n    public ICommand UpdateCurrentViewModelCommand => \\n                        throw new NotImplementedException();       \\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD3F4\\uB354 \\uC0DD\\uC131 - SimpleTrader.WPF / Commands\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Commands / UpdateCurrentViewModelCommand.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class UpdateCurrentViewModelCommand : ICommand\\n{\\n    public event EventHandler CanExecuteChanged;\\n\\n    private INavigator _navigator;\\n\\n    public UpdateCurrentViewModelCommand(INavigator navigator)\\n    {\\n        _navigator = navigator;\\n    }\\n\\n    public bool CanExecute(object parameter)\\n    {\\n        return true;\\n    }\\n\\n    public void Execute(object parameter)\\n    {\\n        if (parameter is ViewType)\\n        {\\n            ViewType viewType = (ViewType)parameter;\\n            switch (viewType)\\n            {\\n                case ViewType.Home:\\n                    _navigator.CurrentViewModel = new HomeViewModel();\\n                    break;\\n                case ViewType.Portfolio:\\n                    _navigator.CurrentViewModel = new PortfolioViewModel();\\n                    break;\\n                default:\\n                    break;\\n            }\\n        }\\n    }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"/ State / Navigators / INavigator.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public enum ViewType\\n{\\n    Home,\\n    Portfolio,\\n}\\n\\n....\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"/ State / Navigators / Navigator.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class Navigator : INavigator\\n{\\n    ....\\n\\n    public ICommand UpdateCurrentViewModelCommand => \\n                        new UpdateCurrentViewModelCommand(this);       \\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"ViewModels / MainViewModel.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class MainViewModel : ViewModelBase\\n{\\n    public INavigator Navigator { get; set; } = new Navigator();\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Controls / NavigationBar.xaml\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Binding Command\\n\\nxmlns:nav=\\\"clr-namespace:SimpleTrader.WPF.State.Navigators\\\"\\n\\n....\\n\\n<RadioButton Grid.Column=\\\"0\\\" \\n                Content=\\\"Home\\\" \\n                Command=\\\"{Binding UpdateCurrentViewModelCommand}\\\" \\n                CommandParameter=\\\"{x:Static nav:ViewType.Home}\\\" />\\n<RadioButton Grid.Column=\\\"1\\\" \\n                Content=\\\"Portfolio\\\"\\n                Command=\\\"{Binding UpdateCurrentViewModelCommand}\\\" \\n                CommandParameter=\\\"{x:Static nav:ViewType.Portfolio}\\\" />\\n<RadioButton Grid.Column=\\\"2\\\" Content=\\\"Buy\\\" />\\n<RadioButton Grid.Column=\\\"3\\\" Content=\\\"Sell\\\" />\\n\\n....\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"MainWindow.xaml\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// MainWindow\\uC5D0 NavigationBar \\uC5F0\\uACB0\\n\\nxmlns:controls=\\\"clr-namespace:SimpleTrader.WPF.Controls\\\"\\n\\n<Grid>\\n    <controls:NavigationBar Grid.Row=\\\"0\\\" DataContext=\\\"{Binding Navigator}\\\" />\\n</Grid>\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"App.xaml.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"protected override void OnStartup(StartupEventArgs e)\\n{\\n    ....\\n\\n    window.DataContext = new MainViewModel();\\n\\n    ....\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"MainWindow.xaml\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// \\uB77C\\uB514\\uC624 \\uBC84\\uD2BC \\uD074\\uB9AD \\uC2DC \\uBDF0\\uBAA8\\uB378 \\uBC14\\uC778\\uB529\\n\\n<Grid>\\n    <Grid.RowDefinitions>\\n        <RowDefinition Height=\\\"auto\\\" />\\n        <RowDefinition Height=\\\"*\\\" />\\n    </Grid.RowDefinitions>\\n    \\n    <controls:NavigationBar Grid.Row=\\\"0\\\" DataContext=\\\"{Binding Navigator}\\\" />\\n    <ContentControl Grid.Row=\\\"1\\\" Content=\\\"{Binding Navigator.CurrentViewModel}\\\" />\\n</Grid>\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"/ State / Navigators / Navigator.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// \\uD074\\uB9AD\\uC2DC \\uC18D\\uC131 \\uBCC0\\uD654\\uB97C \\uC704\\uD574 INotifyPropertyChanged\\uC744 \\uC801\\uC6A9\\n\\npublic class Navigator : INavigator, INotifyPropertyChanged\\n{\\n    private ViewModelBase _currentViewModel;\\n    public ViewModelBase CurrentViewModel\\n    {\\n        get\\n        {\\n            return _currentViewModel;\\n        }\\n        set\\n        {\\n            _currentViewModel = value;\\n            OnPropertyChanged(nameof(CurrentViewModel));\\n        }\\n    }\\n    \\n    public ICommand UpdateCurrentViewModelCommand => \\n                        new UpdateCurrentViewModelCommand(this); \\n\\n    public event PropertyChangedEventHandler PropertyChanged;\\n\\n    protected void OnPropertyChanged(string propertyName)\\n    {\\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\\n    }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"/ Models / ObservableObject.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// INotifyPropertyChanged\\uB97C \\uAD6C\\uD604\\uD55C \\uD074\\uB798\\uC2A4 \\uC791\\uC131\\npublic class ObservableObject : INotifyPropertyChanged\\n{\\n    public event PropertyChangedEventHandler PropertyChanged;\\n\\n    protected void OnPropertyChanged(string propertyName)\\n    {\\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\\n    }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"/ State / Navigators / Navigator.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// INotifyPropertyChanged\\uB97C \\uAD6C\\uD604\\uD55C \\uD074\\uB798\\uC2A4\\uB97C \\uC0C1\\uC18D\\n\\npublic class Navigator : ObservableObject, INavigator\\n{\\n    private ViewModelBase _currentViewModel;\\n    public ViewModelBase CurrentViewModel\\n    {\\n        get\\n        {\\n            return _currentViewModel;\\n        }\\n        set\\n        {\\n            _currentViewModel = value;\\n            OnPropertyChanged(nameof(CurrentViewModel));\\n        }\\n    }\\n\\n    public ICommand UpdateCurrentViewModelCommand => \\n                        new UpdateCurrentViewModelCommand(this);        \\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"/ Views / HomeView.xaml\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"<Grid>\\n    <TextBlock Text=\\\"Home\\\" />\\n</Grid>\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"/ Views / PortfolioView.xaml\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"<Grid>\\n    <TextBlock Text=\\\"Portfolio\\\" />\\n</Grid>\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"App.xaml\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Application\\uC5D0 DataTemplate\\uC73C\\uB85C \\uBDF0\\uBAA8\\uB378-\\uBDF0 \\uB4F1\\uB85D\\n\\nxmlns:viewmodels=\\\"clr-namespace:SimpleTrader.WPF.ViewModels\\\"\\nxmlns:views=\\\"clr-namespace:SimpleTrader.WPF.Views\\\"\\n\\n<Application.Resources>\\n    \\n    <ResourceDictionary>\\n        ....\\n\\n        <DataTemplate DataType=\\\"{x:Type viewmodels:HomeViewModel}\\\">\\n            <views:HomeView />\\n        </DataTemplate>\\n        <DataTemplate DataType=\\\"{x:Type viewmodels:PortfolioViewModel}\\\">\\n            <views:PortfolioView />\\n        </DataTemplate>\\n    \\n    </ResourceDictionary>\\n    \\n</Application.Resources>\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"F5\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"staticQueryHashes":[]}