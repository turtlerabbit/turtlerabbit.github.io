{"componentChunkName":"component---src-templates-archive-post-js","path":"/fullStackWPF/Unit-Testing-the-Authentication-Service-with-NUnit-and-Moq-13/","result":{"data":{"mdx":{"id":"65e005f9-6b40-5195-b858-b1a33fd9839f","excerpt":"SimpleTrader 도메인 계층에 대한 단위 테스트 프로젝트를 만들고 인증 서비스에 대한 단위 테스트 작성을 시작한다. \nNUnit을 테스트 프레임 워크로 사용하고 Moq를 사용하여 인증 서비스 종속성을 테스트한다. 1. Begin writing unit tests for the…","frontmatter":{"title":"FULL STACK WFP 13 - Unit Testing the Authentication Service (with NUnit and Moq)","date":"May 12, 2021","tag":"WPF, FullStack, Unit Test, NUnit, Moq"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FULL STACK WFP 13 - Unit Testing the Authentication Service (with NUnit and Moq)\",\n  \"date\": \"2021-05-12 13\",\n  \"tag\": \"WPF, FullStack, Unit Test, NUnit, Moq\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null), mdx(\"p\", null, \"SimpleTrader \\uB3C4\\uBA54\\uC778 \\uACC4\\uCE35\\uC5D0 \\uB300\\uD55C \\uB2E8\\uC704 \\uD14C\\uC2A4\\uD2B8 \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uB9CC\\uB4E4\\uACE0 \\uC778\\uC99D \\uC11C\\uBE44\\uC2A4\\uC5D0 \\uB300\\uD55C \\uB2E8\\uC704 \\uD14C\\uC2A4\\uD2B8 \\uC791\\uC131\\uC744 \\uC2DC\\uC791\\uD55C\\uB2E4.\\nNUnit\\uC744 \\uD14C\\uC2A4\\uD2B8 \\uD504\\uB808\\uC784 \\uC6CC\\uD06C\\uB85C \\uC0AC\\uC6A9\\uD558\\uACE0 Moq\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uC778\\uC99D \\uC11C\\uBE44\\uC2A4 \\uC885\\uC18D\\uC131\\uC744 \\uD14C\\uC2A4\\uD2B8\\uD55C\\uB2E4.\"), mdx(\"h1\", null), mdx(\"h3\", null, \"1. Begin writing unit tests for the authentication service.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SimpleTrader.Domain.Tests / Services / AuthenticationServices / AuthenticationServiceTests.cs\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class AuthenticationServiceTests\\n{\\n    // public void [MethodName]_[Scenario]_[Result]\\n    // 1. Arrange\\n    // 2. Act\\n    // 3. Assert        \\n}\\n\")))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/fullStackWPF/Unit-Testing-the-Authentication-Service-with-NUnit-and-Moq-13/","previous":{"id":"8055bc63-a257-5da4-9d97-ba56e571aa32","fields":{"slug":"/fullStackWPF/User-Authentication-Login-Registration-Service-12/"},"frontmatter":{"title":"FULL STACK WFP 12 - User Authentication (Login/Registration) Service"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FULL STACK WFP 12 - User Authentication (Login/Registration) Service\",\n  \"date\": \"2021-05-12 12\",\n  \"tag\": \"WPF, FullStack, Login, Registration, User Authentication\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null), mdx(\"p\", null, \"SimpleTrader\\uC5D0 \\uB300\\uD55C \\uC778\\uC99D \\uC11C\\uBE44\\uC2A4\\uB97C \\uC124\\uC815\\uD55C\\uB2E4.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\uC774 \\uC11C\\uBE44\\uC2A4\\uB97C \\uD1B5\\uD574 \\uC0AC\\uC6A9\\uC790\\uB294 \\uACC4\\uC815\\uC744 \\uB4F1\\uB85D\\uD558\\uACE0 \\uACC4\\uC815\\uC5D0 \\uB85C\\uADF8\\uC778 \\uD560 \\uC218 \\uC788\\uB2E4.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\uB610\\uD55C \\uC778\\uC99D \\uC11C\\uBE44\\uC2A4\\uC5D0\\uC11C \\uC774\\uBA54\\uC77C \\uBC0F \\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\\uC73C\\uB85C \\uACC4\\uC815\\uC744 \\uD6A8\\uC728\\uC801\\uC73C\\uB85C \\uAC00\\uC838\\uC62C \\uC218 \\uC788\\uB3C4\\uB85D \\uACC4\\uC815\\uC5D0 \\uB300\\uD55C IDataService\\uB97C IAccountService\\uB85C \\uD655\\uC7A5\\uD55C\\uB2E4. \"), mdx(\"h1\", null), mdx(\"h3\", null, \"1. setup an authentication service for SimpleTrader.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"SimpleTrader.Domain / Models / User.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class User : DomainObject\\n{\\n    public string Email { get; set; }\\n    public string Username { get; set; }\\n    public string PasswordHash { get; set; }  // \\uC218\\uC815\\n    public DateTime DatedJoined { get; set; }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Package Manager Console\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// Password => PasswordHash\\n\\nPM> add-migration password_hash\\nPM> update-datebase\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"SimpleTrader.Domain / Services / AuthenticationServices / IAuthenticationService.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public enum RegistrationResult\\n{\\n    Success,\\n    PasswordsDoNotMatch,\\n    EmailAlreadyExists,\\n    UsernameAlreadyExists\\n}\\n\\npublic interface IAuthenticationService\\n{        \\n    Task<RegistrationResult> Register(string email, \\n                string username, string password, string confirmPasswrod);\\n    Task<Account> Login(string username, string password);\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"SimpleTrader.Domain / Services / AuthenticationServices / AuthenticationService.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class AuthenticationService : IAuthenticationService\\n{\\n    private readonly IAccountService _accountService;\\n\\n    // using Microsoft.AspNet.Identity;\\n    private readonly IPasswordHasher _passwordHasher;\\n\\n    public AuthenticationService(IAccountService accountService, \\n                IPasswordHasher passwordHasher)\\n    {\\n        _accountService = accountService;\\n        _passwordHasher = passwordHasher;\\n    }\\n\\n    public async Task<Account> Login(string username, string password)\\n    {\\n        // 1. Get the user's account from the database\\n        // 2. Hash the password provided in the method\\n        // 3. Campare the hashed provided password to the database hasehd password\\n\\n        Account storedAccount = await _accountService.GetByUsername(username);\\n\\n        PasswordVerificationResult passwordResult = _passwordHasher\\n            .VerifyHashedPassword(storedAccount.AccountHolder.PasswordHash, password);\\n\\n        if (passwordResult != PasswordVerificationResult.Success)\\n        {\\n            throw new InvalidPasswordException(username, password);\\n        }\\n\\n        return storedAccount;\\n    }\\n\\n    public async Task<RegistrationResult> Register(string email, \\n                string username, string password, string confirmPasswrod)\\n    {\\n        RegistrationResult result = RegistrationResult.Success;\\n\\n        if (password != confirmPasswrod)\\n        {\\n            result = RegistrationResult.PasswordsDoNotMatch;\\n        }\\n\\n        Account emailAccount = await _accountService.GetByEmail(email);\\n        if (emailAccount != null)\\n        {\\n            result = RegistrationResult.EmailAlreadyExists;\\n        }\\n\\n        Account usernameAccount = await _accountService.GetByUsername(username);\\n        if (usernameAccount != null)\\n        {\\n            result = RegistrationResult.UsernameAlreadyExists;\\n        }\\n\\n        if (result == RegistrationResult.Success)\\n        {\\n            string hashedPassword = _passwordHasher.HashPassword(password);\\n\\n            User user = new User()\\n            {\\n                Email = email,\\n                Username = username,\\n                PasswordHash = hashedPassword,\\n                DatedJoined = DateTime.Now\\n            };\\n\\n            Account account = new Account()\\n            {\\n                AccountHolder = user\\n            };\\n\\n            await _accountService.Create(account);\\n        }\\n       \\n        return result;\\n    }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"SimpleTrader.Domain / Services /\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public interface IAccountService : IDataService<Account>\\n{\\n    Task<Account> GetByUsername(string username);\\n    Task<Account> GetByEmail(string email);\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"SimpleTrader.WPF / App.xaml.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"...\\nservices.AddSingleton<SimpleTraderDbContextFactory>();\\nservices.AddSingleton<IAuthenticationService, AuthenticationService>();   // \\uCD94\\uAC00\\nservices.AddSingleton<IDataService<Account>, AccountDataService>();\\nservices.AddSingleton<IAccountService, AccountDataService>();      // \\uCD94\\uAC00\\nservices.AddSingleton<IStockPriceService, StockPriceService>();\\nservices.AddSingleton<IBuyStockService, BuyStockService>();\\nservices.AddSingleton<IMajorIndexService, MajorIndexService>();\\n\\nservices.AddSingleton<IPasswordHasher, PasswordHasher>();   // \\uCD94\\uAC00\\n...\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"SimpleTrader.Domain / Exceptions / InvalidPasswordException.cs\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"public class InvalidPasswordException : Exception\\n{\\n    public string Username { get; set; }\\n    public string Password { get; set; }\\n\\n    public InvalidPasswordException(string username, string password)\\n    {\\n        Username = username;\\n        Password = password;\\n    }\\n\\n    public InvalidPasswordException(string message, \\n            string username, string password) : base(message)\\n    {\\n        Username = username;\\n        Password = password;\\n    }\\n\\n    public InvalidPasswordException(string message, \\n            Exception innerException, string username, string password) : \\n                base(message, innerException)\\n    {\\n        Username = username;\\n        Password = password;\\n    }\\n}\\n\")))));\n}\n;\nMDXContent.isMDXComponent = true;"},"next":{"id":"b16b0f4f-f053-59a2-babb-b4692d449ae9","fields":{"slug":"/fullStackWPF/Full-Stack-WPF-LIST/"},"frontmatter":{"title":"Full Stack WPF"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Full Stack WPF\",\n  \"date\": \"2030-05-13 01\",\n  \"tag\": \"WPF\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"No\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Subject\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"#01\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Domain Introduction and Entity Framework Setup\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"\\uD504\\uB85C\\uC81D\\uD2B8\\uC640 \\uB3C4\\uBA54\\uC778\\uC744 \\uC18C\\uAC1C\\uD558\\uACE0 \\uB3C4\\uBA54\\uC778 \\uACC4\\uCE35 \\uAD6C\\uCD95\\uC744 \\uC2DC\\uC791\\uD558\\uACE0 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC744 \\uC704\\uD55C Entity Framework\\uB97C \\uC124\\uC815\\uD55C\\uB2E4.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"#02\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Entity Framework CRUD\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"SimpleTraderDbContext\\uB97C \\uC57D\\uAC04 \\uB9AC\\uD329\\uD130\\uB9C1\\uD558\\uACE0 SimpleTraderDbContext\\uB97C \\uC778\\uC2A4\\uD134\\uC2A4\\uD654\\uD558\\uAE30\\uC704\\uD55C \\uD329\\uD1A0\\uB9AC \\uD074\\uB798\\uC2A4\\uB97C \\uB9CC\\uB4E0\\uB2E4. \\uADF8\\uB7F0 \\uB2E4\\uC74C \\uD30C\\uD2B8 FULL STACK WFP 01\\uC758 Entity Framework \\uC124\\uC815\\uC744 \\uC0AC\\uC6A9\\uD558\\uC5EC \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC5D0 \\uB300\\uD55C Data Service classes \\uBE4C\\uB4DC\\uB97C \\uC2DC\\uC791\\uD55C\\uB2E4.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"#03\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"WPF in .NET and MVVM Navigation\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Simple Trader front-end\\uB97C \\uC704\\uD55C WPF project\\uB97C \\uC124\\uC815\\uD55C\\uB2E4. MVVM \\uBC29\\uC2DD\\uC73C\\uB85C \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uC124\\uC815\\uD558\\uACE0 \\uB9E4\\uC6B0 \\uAC04\\uB2E8\\uD55C navigation control\\uB97C \\uB9CC\\uB4E4\\uACE0 \\uBDF0 \\uBAA8\\uB378 \\uAC04 \\uD0D0\\uC0C9\\uC744 \\uC124\\uC815\\uD55C\\uB2E4.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"#04\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"API Service Calls and Async ViewModel Loading\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"\\uC8FC\\uC694 \\uC8FC\\uAC00 \\uC9C0\\uC218\\uC5D0 \\uB300\\uD55C \\uC815\\uBCF4\\uB97C \\uB85C\\uB4DC\\uD558\\uB294 \\uC11C\\uBE44\\uC2A4\\uB97C \\uB9CC\\uB4E4\\uC5B4 service layer\\uB97C \\uD655\\uC7A5\\uD55C\\uB2E4. \\uC774 \\uC11C\\uBE44\\uC2A4\\uB294 HttpClient\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC FinancialModelingPrep API\\uC5D0\\uC11C JSON \\uB370\\uC774\\uD130\\uB97C \\uAC80\\uC0C9\\uD558\\uACE0 Json.NET\\uC744 \\uC0AC\\uC6A9\\uD558\\uC5EC JSON\\uC744 \\uAC1C\\uCCB4\\uB85C \\uC5ED\\uC9C1\\uB82C\\uD654\\uD55C\\uB2E4. \\uADF8\\uB7F0 \\uB2E4\\uC74C, I use the service in a ViewModel to load major stock index information.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"#05\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Styling the Navigation Bar\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"WPF styling\\uC73C\\uB85C navigation bar\\uB97C \\uD5A5\\uC0C1\\uC2DC\\uD0A8\\uB2E4. The navigation bar styles\\uC740 \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uCCB4\\uACC4\\uC801\\uC73C\\uB85C \\uC720\\uC9C0\\uD558\\uAE30 \\uC704\\uD574 \\uC790\\uCCB4 resource dictionary\\uC5D0 \\uACA9\\uB9AC\\uB41C\\uB2E4. The navigation bar resource dictionary consists of a style for the navigation bar radio buttons. \\uB77C\\uB514\\uC624 \\uBC84\\uD2BC \\uC2A4\\uD0C0\\uC77C\\uC740 \\uC0AC\\uC6A9\\uC790 \\uC815\\uC758 \\uCEE8\\uD2B8\\uB864 \\uD15C\\uD50C\\uB9BF\\uC744 \\uC815\\uC758\\uD558\\uACE0 \\uB2E4\\uC591\\uD55C \\uC560\\uB2C8\\uBA54\\uC774\\uC158\\uACFC \\uD2B8\\uB9AC\\uAC70\\uB97C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"#06\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"Creating a Card Control\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": \"center\"\n  }), \"MajorIndex \\uB370\\uC774\\uD130\\uC5D0 \\uB300\\uD55C card control\\uACFC MajorIndexListingViewModel\\uC5D0 \\uB300\\uD55C user control\\uC744 \\uB9CC\\uB4E0\\uB2E4. \\uADF8\\uB7F0 \\uB2E4\\uC74C HomeView\\uC5D0\\uC11C MajorIndex \\uB370\\uC774\\uD130\\uB97C \\uBCFC \\uC218 \\uC788\\uB3C4\\uB85D MajorIndexListingViewModel\\uC5D0 \\uB300\\uD55C \\uCEE8\\uD2B8\\uB864\\uC744 HomeView\\uC5D0 \\uCD94\\uAC00\\uD55C\\uB2E4. \\uB9C8\\uC9C0\\uB9C9\\uC73C\\uB85C \\uC2DC\\uC791\\uC2DC HomeView\\uB97C \\uC790\\uB3D9\\uC73C\\uB85C \\uD45C\\uC2DC\\uD558\\uB3C4\\uB85D \\uC751\\uC6A9 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uC124\\uC815\\uD588\\uB2E4.\")))));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"staticQueryHashes":[]}